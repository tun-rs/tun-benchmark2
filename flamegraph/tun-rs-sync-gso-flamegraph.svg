<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="870.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="853" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="853" > </text>
<g id="frames">
<g >
<title>__mod_memcg_state (160,475,928 samples, 0.26%)</title><rect x="996.8" y="357" width="3.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="999.81" y="367.5" ></text>
</g>
<g >
<title>napi_consume_skb (534,921,925 samples, 0.88%)</title><rect x="410.1" y="677" width="10.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="413.08" y="687.5" ></text>
</g>
<g >
<title>native_sched_clock (53,501,274 samples, 0.09%)</title><rect x="992.7" y="261" width="1.0" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="995.67" y="271.5" ></text>
</g>
<g >
<title>__refill_stock (178,873,451 samples, 0.29%)</title><rect x="959.8" y="357" width="3.5" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="962.82" y="367.5" ></text>
</g>
<g >
<title>__pick_next_task (73,686,770 samples, 0.12%)</title><rect x="642.4" y="565" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="645.42" y="575.5" ></text>
</g>
<g >
<title>sock_wfree (148,343,873 samples, 0.24%)</title><rect x="1005.1" y="533" width="2.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1008.08" y="543.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (1,609,901,379 samples, 2.64%)</title><rect x="897.3" y="453" width="31.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="900.30" y="463.5" >__..</text>
</g>
<g >
<title>tcp_v4_early_demux (180,557,758 samples, 0.30%)</title><rect x="1010.0" y="533" width="3.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1013.02" y="543.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (36,687,047 samples, 0.06%)</title><rect x="655.7" y="501" width="0.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="658.71" y="511.5" ></text>
</g>
<g >
<title>__folio_put (320,932,785 samples, 0.53%)</title><rect x="414.2" y="645" width="6.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="417.22" y="655.5" ></text>
</g>
<g >
<title>perf_pmu_nop_void (37,257,981 samples, 0.06%)</title><rect x="646.1" y="533" width="0.7" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="649.13" y="543.5" ></text>
</g>
<g >
<title>read (11,795,485,944 samples, 19.32%)</title><rect x="446.9" y="773" width="228.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="449.89" y="783.5" >read</text>
</g>
<g >
<title>record_times (49,304,853 samples, 0.08%)</title><rect x="651.2" y="549" width="0.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="654.19" y="559.5" ></text>
</g>
<g >
<title>native_apic_msr_eoi (53,465,030 samples, 0.09%)</title><rect x="1146.6" y="741" width="1.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1149.63" y="751.5" ></text>
</g>
<g >
<title>dequeue_task_fair (892,114,016 samples, 1.46%)</title><rect x="654.9" y="549" width="17.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="657.95" y="559.5" ></text>
</g>
<g >
<title>tun_rs::platform::linux::checksum::checksum (6,650,703,833 samples, 10.90%)</title><rect x="291.9" y="789" width="128.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="294.86" y="799.5" >tun_rs::platform..</text>
</g>
<g >
<title>native_sched_clock (53,500,322 samples, 0.09%)</title><rect x="922.2" y="37" width="1.0" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="925.21" y="47.5" ></text>
</g>
<g >
<title>select_task_rq_fair (53,499,967 samples, 0.09%)</title><rect x="921.1" y="85" width="1.0" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="924.08" y="95.5" ></text>
</g>
<g >
<title>tun_rs::platform::linux::offload::TcpFlowKey::new (213,998,677 samples, 0.35%)</title><rect x="1022.1" y="789" width="4.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1025.08" y="799.5" ></text>
</g>
<g >
<title>napi_consume_skb (160,497,056 samples, 0.26%)</title><rect x="1143.5" y="677" width="3.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1146.52" y="687.5" ></text>
</g>
<g >
<title>alloc_pages_noprof (3,477,078,067 samples, 5.70%)</title><rect x="799.7" y="597" width="67.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="802.71" y="607.5" >alloc_p..</text>
</g>
<g >
<title>handle_softirqs (588,422,598 samples, 0.96%)</title><rect x="409.0" y="709" width="11.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="412.05" y="719.5" ></text>
</g>
<g >
<title>_raw_spin_lock (53,499,961 samples, 0.09%)</title><rect x="882.7" y="501" width="1.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="885.69" y="511.5" ></text>
</g>
<g >
<title>free_frozen_page_commit (53,497,760 samples, 0.09%)</title><rect x="1145.6" y="613" width="1.0" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1148.59" y="623.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (106,975,070 samples, 0.18%)</title><rect x="414.2" y="629" width="2.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="417.22" y="639.5" ></text>
</g>
<g >
<title>psi_task_switch (34,726,825 samples, 0.06%)</title><rect x="672.2" y="597" width="0.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="675.19" y="607.5" ></text>
</g>
<g >
<title>__free_one_page (35,979,228 samples, 0.06%)</title><rect x="947.6" y="325" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="950.62" y="335.5" ></text>
</g>
<g >
<title>perf_ctx_disable (34,154,610 samples, 0.06%)</title><rect x="645.5" y="533" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="648.47" y="543.5" ></text>
</g>
<g >
<title>kmem_cache_free (112,052,589 samples, 0.18%)</title><rect x="934.8" y="389" width="2.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="937.81" y="399.5" ></text>
</g>
<g >
<title>available_idle_cpu (53,499,967 samples, 0.09%)</title><rect x="921.1" y="53" width="1.0" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="924.08" y="63.5" ></text>
</g>
<g >
<title>__slab_free (62,115,712 samples, 0.10%)</title><rect x="479.1" y="581" width="1.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="482.10" y="591.5" ></text>
</g>
<g >
<title>page_counter_cancel (36,389,678 samples, 0.06%)</title><rect x="959.8" y="325" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="962.82" y="335.5" ></text>
</g>
<g >
<title>try_to_wake_up (379,455,812 samples, 0.62%)</title><rect x="915.9" y="117" width="7.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="918.91" y="127.5" ></text>
</g>
<g >
<title>tun_rs::platform::linux::offload::checksum_valid (4,532,598,761 samples, 7.43%)</title><rect x="1031.4" y="789" width="87.6" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1034.38" y="799.5" >tun_rs::pl..</text>
</g>
<g >
<title>__wake_up_sync_key (486,440,354 samples, 0.80%)</title><rect x="913.8" y="165" width="9.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="916.84" y="175.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (427,988,872 samples, 0.70%)</title><rect x="985.4" y="325" width="8.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="988.43" y="335.5" ></text>
</g>
<g >
<title>pick_next_task_fair (47,573,020 samples, 0.08%)</title><rect x="642.4" y="549" width="0.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="645.42" y="559.5" ></text>
</g>
<g >
<title>skb_free_head (103,433,903 samples, 0.17%)</title><rect x="481.3" y="597" width="2.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="484.33" y="607.5" ></text>
</g>
<g >
<title>tun_rs::platform::linux::offload::TcpGROTable::lookup_or_insert (267,497,547 samples, 0.44%)</title><rect x="203.7" y="773" width="5.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="206.71" y="783.5" ></text>
</g>
<g >
<title>tun_chr_read_iter (10,657,719,796 samples, 17.46%)</title><rect x="467.7" y="661" width="206.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="470.72" y="671.5" >tun_chr_read_iter</text>
</g>
<g >
<title>tcp_send_ack (1,609,901,379 samples, 2.64%)</title><rect x="897.3" y="437" width="31.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="900.30" y="447.5" >tc..</text>
</g>
<g >
<title>tcp_data_queue (1,684,383,399 samples, 2.76%)</title><rect x="968.4" y="453" width="32.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="971.39" y="463.5" >tc..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (106,998,233 samples, 0.18%)</title><rect x="979.1" y="325" width="2.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="982.14" y="335.5" ></text>
</g>
<g >
<title>__wake_up_common (486,440,354 samples, 0.80%)</title><rect x="913.8" y="149" width="9.4" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="916.84" y="159.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (413,306,163 samples, 0.68%)</title><rect x="502.8" y="549" width="8.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="505.84" y="559.5" ></text>
</g>
<g >
<title>select_task_rq_fair (164,904,054 samples, 0.27%)</title><rect x="982.2" y="309" width="3.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="985.25" y="319.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (38,238,338 samples, 0.06%)</title><rect x="629.5" y="597" width="0.8" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="632.52" y="607.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (146,907,850 samples, 0.24%)</title><rect x="639.6" y="517" width="2.8" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="642.58" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (104,151,166 samples, 0.17%)</title><rect x="179.9" y="757" width="2.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="182.89" y="767.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (53,477,229 samples, 0.09%)</title><rect x="418.4" y="597" width="1.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="421.36" y="607.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (6,170,818,713 samples, 10.11%)</title><rect x="883.7" y="501" width="119.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="886.73" y="511.5" >tcp_v4_rcv</text>
</g>
<g >
<title>[unknown] (10,733,408,158 samples, 17.58%)</title><rect x="20.3" y="789" width="207.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="23.26" y="799.5" >[unknown]</text>
</g>
<g >
<title>__virt_addr_valid (53,491,083 samples, 0.09%)</title><rect x="710.7" y="565" width="1.0" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="713.71" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17,303,256,313 samples, 28.35%)</title><rect x="681.8" y="757" width="334.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="684.82" y="767.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>sock_alloc_send_pskb (4,518,698,740 samples, 7.40%)</title><rect x="785.5" y="629" width="87.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="788.47" y="639.5" >sock_alloc..</text>
</g>
<g >
<title>perf_ctx_enable (146,907,850 samples, 0.24%)</title><rect x="639.6" y="549" width="2.8" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="642.58" y="559.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (3,477,078,067 samples, 5.70%)</title><rect x="799.7" y="581" width="67.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="802.71" y="591.5" >alloc_p..</text>
</g>
<g >
<title>tun_put_user.isra.0 (7,600,926,009 samples, 12.45%)</title><rect x="483.3" y="629" width="147.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="486.33" y="639.5" >tun_put_user.isra.0</text>
</g>
<g >
<title>tun_rs::platform::linux::offload::gso_split (1,444,367,780 samples, 2.37%)</title><rect x="1119.7" y="789" width="28.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1122.74" y="799.5" >t..</text>
</g>
<g >
<title>tun_do_read (10,463,502,315 samples, 17.14%)</title><rect x="470.6" y="645" width="202.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="473.60" y="655.5" >tun_do_read</text>
</g>
<g >
<title>update_curr_dl_se (45,742,846 samples, 0.07%)</title><rect x="663.2" y="469" width="0.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="666.20" y="479.5" ></text>
</g>
<g >
<title>psi_task_switch (375,053,559 samples, 0.61%)</title><rect x="646.8" y="581" width="7.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="649.85" y="591.5" ></text>
</g>
<g >
<title>cpuacct_charge (48,699,017 samples, 0.08%)</title><rect x="656.4" y="501" width="1.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="659.42" y="511.5" ></text>
</g>
<g >
<title>free_frozen_pages (510,079,491 samples, 0.84%)</title><rect x="945.0" y="373" width="9.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="947.97" y="383.5" ></text>
</g>
<g >
<title>select_idle_sibling (53,499,967 samples, 0.09%)</title><rect x="921.1" y="69" width="1.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="924.08" y="79.5" ></text>
</g>
<g >
<title>task_tick_fair (53,498,052 samples, 0.09%)</title><rect x="852.4" y="389" width="1.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="855.45" y="399.5" ></text>
</g>
<g >
<title>tun_ring_recv (2,204,066,351 samples, 3.61%)</title><rect x="630.3" y="629" width="42.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="633.26" y="639.5" >tun_..</text>
</g>
<g >
<title>dequeue_task (892,114,016 samples, 1.46%)</title><rect x="654.9" y="565" width="17.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="657.95" y="575.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (7,134,317,479 samples, 11.69%)</title><rect x="876.6" y="581" width="137.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="879.63" y="591.5" >__netif_receive_s..</text>
</g>
<g >
<title>skb_release_data (481,421,288 samples, 0.79%)</title><rect x="411.1" y="661" width="9.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="414.12" y="671.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (45,347,832 samples, 0.07%)</title><rect x="674.0" y="757" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="677.02" y="767.5" ></text>
</g>
<g >
<title>net_rx_action (160,497,056 samples, 0.26%)</title><rect x="1143.5" y="693" width="3.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1146.52" y="703.5" ></text>
</g>
<g >
<title>skb_free_head (24,721,150 samples, 0.04%)</title><rect x="896.1" y="437" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="899.10" y="447.5" ></text>
</g>
<g >
<title>tun_rs::platform::linux::offload::ip_headers_can_coalesce (160,497,616 samples, 0.26%)</title><rect x="210.0" y="773" width="3.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="213.04" y="783.5" ></text>
</g>
<g >
<title>skb_release_data (160,497,056 samples, 0.26%)</title><rect x="1143.5" y="661" width="3.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1146.52" y="671.5" ></text>
</g>
<g >
<title>_raw_spin_lock (106,991,935 samples, 0.18%)</title><rect x="924.3" y="245" width="2.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="927.28" y="255.5" ></text>
</g>
<g >
<title>slab_update_freelist.isra.0 (48,745,915 samples, 0.08%)</title><rect x="936.0" y="357" width="1.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="939.03" y="367.5" ></text>
</g>
<g >
<title>skb_set_owner_w (304,736,006 samples, 0.50%)</title><rect x="866.9" y="613" width="5.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="869.93" y="623.5" ></text>
</g>
<g >
<title>skb_release_data (37,201,562 samples, 0.06%)</title><rect x="896.6" y="437" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="899.58" y="447.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node_noprof (53,488,946 samples, 0.09%)</title><rect x="902.5" y="373" width="1.0" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="905.47" y="383.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (53,498,052 samples, 0.09%)</title><rect x="852.4" y="501" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="855.45" y="511.5" ></text>
</g>
<g >
<title>select_idle_sibling (164,904,054 samples, 0.27%)</title><rect x="982.2" y="293" width="3.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="985.25" y="303.5" ></text>
</g>
<g >
<title>try_charge_memcg (53,479,891 samples, 0.09%)</title><rect x="999.9" y="373" width="1.0" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1002.91" y="383.5" ></text>
</g>
<g >
<title>switch_fpu_return (81,358,180 samples, 0.13%)</title><rect x="452.2" y="693" width="1.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="455.22" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (53,498,185 samples, 0.09%)</title><rect x="676.9" y="757" width="1.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="679.91" y="767.5" ></text>
</g>
<g >
<title>tick_nohz_handler (53,498,052 samples, 0.09%)</title><rect x="852.4" y="437" width="1.1" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="855.45" y="447.5" ></text>
</g>
<g >
<title>kmem_cache_free (112,131,865 samples, 0.18%)</title><rect x="478.1" y="597" width="2.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="481.13" y="607.5" ></text>
</g>
<g >
<title>ksys_read (11,309,606,512 samples, 18.53%)</title><rect x="455.1" y="693" width="218.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="458.12" y="703.5" >ksys_read</text>
</g>
<g >
<title>[unknown] (1,115,470,980 samples, 1.83%)</title><rect x="122.0" y="773" width="21.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="125.04" y="783.5" >[..</text>
</g>
<g >
<title>all (61,043,417,232 samples, 100%)</title><rect x="10.0" y="821" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="831.5" ></text>
</g>
<g >
<title>schedule (1,888,489,255 samples, 3.09%)</title><rect x="636.4" y="613" width="36.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="639.36" y="623.5" >sch..</text>
</g>
<g >
<title>try_to_wake_up (913,862,798 samples, 1.50%)</title><rect x="976.0" y="341" width="17.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="979.04" y="351.5" ></text>
</g>
<g >
<title>tun_rs::platform::linux::device::DeviceImpl::recv_multiple0 (12,009,476,626 samples, 19.67%)</title><rect x="442.7" y="789" width="232.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="445.75" y="799.5" >tun_rs::platform::linux::devic..</text>
</g>
<g >
<title>__raw_spin_lock_irqsave (55,211,031 samples, 0.09%)</title><rect x="948.3" y="309" width="1.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="951.31" y="319.5" ></text>
</g>
<g >
<title>tun_ring_recv (45,407,328 samples, 0.07%)</title><rect x="672.9" y="645" width="0.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="675.86" y="655.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (146,907,850 samples, 0.24%)</title><rect x="639.6" y="565" width="2.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="642.58" y="575.5" ></text>
</g>
<g >
<title>vfs_write (16,667,191,432 samples, 27.30%)</title><rect x="694.1" y="677" width="322.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="697.11" y="687.5" >vfs_write</text>
</g>
<g >
<title>__sk_mem_reduce_allocated (178,873,451 samples, 0.29%)</title><rect x="959.8" y="405" width="3.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="962.82" y="415.5" ></text>
</g>
<g >
<title>dl_server_update (45,742,846 samples, 0.07%)</title><rect x="663.2" y="485" width="0.9" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="666.20" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_write (17,169,542,411 samples, 28.13%)</title><rect x="684.4" y="709" width="331.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="687.40" y="719.5" >__x64_sys_write</text>
</g>
<g >
<title>tcp_check_space (264,283,429 samples, 0.43%)</title><rect x="963.3" y="453" width="5.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="966.28" y="463.5" ></text>
</g>
<g >
<title>ip_rcv_core (53,498,215 samples, 0.09%)</title><rect x="1013.5" y="565" width="1.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1016.51" y="575.5" ></text>
</g>
<g >
<title>tcp_check_space (88,678,907 samples, 0.15%)</title><rect x="891.3" y="469" width="1.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="894.28" y="479.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (53,477,229 samples, 0.09%)</title><rect x="418.4" y="565" width="1.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="421.36" y="575.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (238,219,543 samples, 0.39%)</title><rect x="450.5" y="725" width="4.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="453.52" y="735.5" ></text>
</g>
<g >
<title>copy_page_from_iter (3,593,030,657 samples, 5.89%)</title><rect x="716.0" y="613" width="69.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="719.01" y="623.5" >copy_pa..</text>
</g>
<g >
<title>__wake_up_common (1,134,335,332 samples, 1.86%)</title><rect x="971.8" y="389" width="21.9" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="974.78" y="399.5" >_..</text>
</g>
<g >
<title>__tcp_send_ack.part.0 (1,609,901,379 samples, 2.64%)</title><rect x="897.3" y="421" width="31.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="900.30" y="431.5" >__..</text>
</g>
<g >
<title>__calc_delta.constprop.0 (39,419,923 samples, 0.06%)</title><rect x="654.9" y="501" width="0.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="657.95" y="511.5" ></text>
</g>
<g >
<title>update_curr_se (42,464,812 samples, 0.07%)</title><rect x="664.1" y="485" width="0.8" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="667.08" y="495.5" ></text>
</g>
<g >
<title>_copy_to_iter (203,570,421 samples, 0.33%)</title><rect x="493.3" y="613" width="4.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="496.35" y="623.5" ></text>
</g>
<g >
<title>consume_skb (461,018,740 samples, 0.76%)</title><rect x="474.4" y="629" width="8.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="477.42" y="639.5" ></text>
</g>
<g >
<title>tun_rs::platform::linux::offload::handle_gro (214,019,403 samples, 0.35%)</title><rect x="1147.7" y="789" width="4.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1150.66" y="799.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (155,099,368 samples, 0.25%)</title><rect x="643.8" y="565" width="3.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="646.85" y="575.5" ></text>
</g>
<g >
<title>__rcu_read_lock (58,042,404 samples, 0.10%)</title><rect x="886.7" y="485" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="889.69" y="495.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (45,292,292 samples, 0.07%)</title><rect x="682.5" y="725" width="0.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="685.49" y="735.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3,283,395,083 samples, 5.38%)</title><rect x="228.4" y="789" width="63.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="231.39" y="799.5" >__memm..</text>
</g>
<g >
<title>hrtimer_start_range_ns (167,987,161 samples, 0.28%)</title><rect x="668.0" y="485" width="3.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="671.05" y="495.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core (180,557,758 samples, 0.30%)</title><rect x="1010.0" y="549" width="3.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1013.02" y="559.5" ></text>
</g>
<g >
<title>free_frozen_page_commit (53,477,229 samples, 0.09%)</title><rect x="418.4" y="613" width="1.0" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="421.36" y="623.5" ></text>
</g>
<g >
<title>tcp_ack (1,803,426,823 samples, 2.95%)</title><rect x="928.4" y="453" width="34.9" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="931.42" y="463.5" >tc..</text>
</g>
<g >
<title>native_sched_clock (101,175,941 samples, 0.17%)</title><rect x="652.1" y="501" width="2.0" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="655.14" y="511.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (35,979,228 samples, 0.06%)</title><rect x="947.6" y="309" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="950.62" y="319.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (6,805,437,314 samples, 11.15%)</title><rect x="498.7" y="613" width="131.6" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="501.71" y="623.5" >skb_copy_datagra..</text>
</g>
<g >
<title>sched_clock_noinstr (101,175,941 samples, 0.17%)</title><rect x="652.1" y="517" width="2.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="655.14" y="527.5" ></text>
</g>
<g >
<title>x64_sys_call (17,169,542,411 samples, 28.13%)</title><rect x="684.4" y="725" width="331.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="687.40" y="735.5" >x64_sys_call</text>
</g>
<g >
<title>hrtimer_interrupt (53,498,052 samples, 0.09%)</title><rect x="852.4" y="469" width="1.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="855.45" y="479.5" ></text>
</g>
<g >
<title>rmqueue.isra.0 (267,461,877 samples, 0.44%)</title><rect x="861.8" y="533" width="5.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="864.76" y="543.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_skmem (213,955,819 samples, 0.35%)</title><rect x="996.8" y="389" width="4.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="999.81" y="399.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3,316,583,020 samples, 5.43%)</title><rect x="802.8" y="549" width="64.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="805.81" y="559.5" >get_pag..</text>
</g>
<g >
<title>dl_server_stop (197,748,169 samples, 0.32%)</title><rect x="667.5" y="517" width="3.8" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="670.47" y="527.5" ></text>
</g>
<g >
<title>tun_rs::platform::linux::offload::gso_none_checksum (38,200,725 samples, 0.06%)</title><rect x="1119.0" y="789" width="0.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1122.00" y="799.5" ></text>
</g>
<g >
<title>_copy_from_iter (54,806,107 samples, 0.09%)</title><rect x="707.3" y="629" width="1.0" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="710.27" y="639.5" ></text>
</g>
<g >
<title>skb_release_data (1,181,798,056 samples, 1.94%)</title><rect x="937.0" y="405" width="22.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="939.97" y="415.5" >s..</text>
</g>
<g >
<title>tun_rs_sync_gso::copy (126,615,561 samples, 0.21%)</title><rect x="141.2" y="757" width="2.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="144.15" y="767.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (6,606,718,033 samples, 10.82%)</title><rect x="501.8" y="581" width="127.7" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="504.81" y="591.5" >simple_copy_to_i..</text>
</g>
<g >
<title>sched_clock_noinstr (53,500,322 samples, 0.09%)</title><rect x="922.2" y="53" width="1.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="925.21" y="63.5" ></text>
</g>
<g >
<title>sched_clock_cpu (160,494,116 samples, 0.26%)</title><rect x="990.6" y="309" width="3.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="993.60" y="319.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (53,499,524 samples, 0.09%)</title><rect x="995.8" y="437" width="1.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="998.78" y="447.5" ></text>
</g>
<g >
<title>__slab_free (82,929,963 samples, 0.14%)</title><rect x="935.4" y="373" width="1.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="938.37" y="383.5" ></text>
</g>
<g >
<title>ip_finish_output2 (967,914,880 samples, 1.59%)</title><rect x="907.6" y="293" width="18.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="910.64" y="303.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (1,589,056,535 samples, 2.60%)</title><rect x="932.6" y="437" width="30.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="935.56" y="447.5" >tc..</text>
</g>
<g >
<title>__update_load_avg_cfs_rq (42,101,326 samples, 0.07%)</title><rect x="665.7" y="485" width="0.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="668.69" y="495.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1,235,421,737 samples, 2.02%)</title><rect x="903.5" y="405" width="23.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="906.50" y="415.5" >_..</text>
</g>
<g >
<title>call_function_single_prep_ipi (107,001,865 samples, 0.18%)</title><rect x="987.5" y="293" width="2.1" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="990.50" y="303.5" ></text>
</g>
<g >
<title>alloc_skb_with_frags (4,106,964,442 samples, 6.73%)</title><rect x="787.5" y="613" width="79.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="790.54" y="623.5" >alloc_skb..</text>
</g>
<g >
<title>fput (39,617,967 samples, 0.06%)</title><rect x="684.4" y="693" width="0.8" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="687.40" y="703.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (588,422,598 samples, 0.96%)</title><rect x="409.0" y="725" width="11.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="412.05" y="735.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (53,500,257 samples, 0.09%)</title><rect x="151.9" y="773" width="1.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="154.88" y="783.5" ></text>
</g>
<g >
<title>sch_direct_xmit (646,922,223 samples, 1.06%)</title><rect x="911.8" y="229" width="12.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="914.77" y="239.5" ></text>
</g>
<g >
<title>update_load_avg (92,188,254 samples, 0.15%)</title><rect x="665.7" y="501" width="1.8" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="668.69" y="511.5" ></text>
</g>
<g >
<title>free_frozen_pages (160,459,964 samples, 0.26%)</title><rect x="416.3" y="629" width="3.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="419.29" y="639.5" ></text>
</g>
<g >
<title>read_tsc (78,682,440 samples, 0.13%)</title><rect x="668.9" y="469" width="1.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="671.90" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_write (33,775,107 samples, 0.06%)</title><rect x="227.7" y="789" width="0.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="230.74" y="799.5" ></text>
</g>
<g >
<title>__GI___libc_write (17,754,389,637 samples, 29.08%)</title><rect x="675.9" y="773" width="343.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="678.93" y="783.5" >__GI___libc_write</text>
</g>
<g >
<title>sched_clock_cpu (101,175,941 samples, 0.17%)</title><rect x="652.1" y="549" width="2.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="655.14" y="559.5" ></text>
</g>
<g >
<title>tun_rs::platform::linux::device::DeviceImpl::recv_multiple0 (53,498,191 samples, 0.09%)</title><rect x="186.3" y="773" width="1.0" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="189.31" y="783.5" ></text>
</g>
<g >
<title>__dev_xmit_skb (646,922,223 samples, 1.06%)</title><rect x="911.8" y="245" width="12.5" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="914.77" y="255.5" ></text>
</g>
<g >
<title>__fsnotify_parent (207,087,785 samples, 0.34%)</title><rect x="696.4" y="661" width="4.0" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="699.42" y="671.5" ></text>
</g>
<g >
<title>_raw_spin_lock (197,491,215 samples, 0.32%)</title><rect x="470.6" y="629" width="3.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="473.60" y="639.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (91,190,259 samples, 0.15%)</title><rect x="947.6" y="341" width="1.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="950.62" y="351.5" ></text>
</g>
<g >
<title>update_load_avg (53,498,052 samples, 0.09%)</title><rect x="852.4" y="373" width="1.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="855.45" y="383.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (588,422,598 samples, 0.96%)</title><rect x="409.0" y="757" width="11.4" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="412.05" y="767.5" ></text>
</g>
<g >
<title>pollwake (967,361,570 samples, 1.58%)</title><rect x="975.0" y="373" width="18.7" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="978.01" y="383.5" ></text>
</g>
<g >
<title>read (224,864,825 samples, 0.37%)</title><rect x="179.9" y="773" width="4.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="182.89" y="783.5" ></text>
</g>
<g >
<title>rb_erase (56,029,507 samples, 0.09%)</title><rect x="931.1" y="437" width="1.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="934.11" y="447.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (44,188,030 samples, 0.07%)</title><rect x="668.0" y="469" width="0.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="671.05" y="479.5" ></text>
</g>
<g >
<title>update_process_times (53,498,052 samples, 0.09%)</title><rect x="852.4" y="421" width="1.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="855.45" y="431.5" ></text>
</g>
<g >
<title>ip_rcv (6,932,731,530 samples, 11.36%)</title><rect x="879.5" y="565" width="134.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="882.49" y="575.5" >ip_rcv</text>
</g>
<g >
<title>__check_object_size (466,791,762 samples, 0.76%)</title><rect x="501.8" y="565" width="9.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="504.81" y="575.5" ></text>
</g>
<g >
<title>task_non_contending (197,748,169 samples, 0.32%)</title><rect x="667.5" y="501" width="3.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="670.47" y="511.5" ></text>
</g>
<g >
<title>kmalloc_reserve (154,754,705 samples, 0.25%)</title><rect x="794.9" y="581" width="3.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="797.93" y="591.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1,187,836,431 samples, 1.95%)</title><rect x="971.8" y="405" width="22.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="974.78" y="415.5" >_..</text>
</g>
<g >
<title>__rcu_read_lock (53,504,544 samples, 0.09%)</title><rect x="906.6" y="293" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="909.60" y="303.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (58,550,827 samples, 0.10%)</title><rect x="922.1" y="101" width="1.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="925.11" y="111.5" ></text>
</g>
<g >
<title>__alloc_skb (320,980,811 samples, 0.53%)</title><rect x="897.3" y="405" width="6.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="900.30" y="415.5" ></text>
</g>
<g >
<title>ip_output (1,074,921,392 samples, 1.76%)</title><rect x="906.6" y="341" width="20.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="909.60" y="351.5" ></text>
</g>
<g >
<title>__folio_put (160,497,056 samples, 0.26%)</title><rect x="1143.5" y="645" width="3.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1146.52" y="655.5" ></text>
</g>
<g >
<title>alloc_pages_noprof (106,998,292 samples, 0.18%)</title><rect x="785.5" y="613" width="2.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="788.47" y="623.5" ></text>
</g>
<g >
<title>free_tail_page_prepare (53,497,751 samples, 0.09%)</title><rect x="419.4" y="629" width="1.0" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="422.39" y="639.5" ></text>
</g>
<g >
<title>ip_finish_output (1,074,921,392 samples, 1.76%)</title><rect x="906.6" y="325" width="20.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="909.60" y="335.5" ></text>
</g>
<g >
<title>prepare_task_switch (155,099,368 samples, 0.25%)</title><rect x="643.8" y="581" width="3.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="646.85" y="591.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (53,501,112 samples, 0.09%)</title><rect x="880.5" y="533" width="1.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="883.53" y="543.5" ></text>
</g>
<g >
<title>update_curr_se (40,829,166 samples, 0.07%)</title><rect x="664.9" y="501" width="0.8" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="667.90" y="511.5" ></text>
</g>
<g >
<title>rmqueue_bulk (106,991,563 samples, 0.18%)</title><rect x="864.9" y="501" width="2.0" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="867.86" y="511.5" ></text>
</g>
<g >
<title>arch_exit_to_user_mode_prepare.isra.0 (81,358,180 samples, 0.13%)</title><rect x="452.2" y="709" width="1.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="455.22" y="719.5" ></text>
</g>
<g >
<title>inet_ehashfn (53,501,464 samples, 0.09%)</title><rect x="1012.5" y="517" width="1.0" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1015.47" y="527.5" ></text>
</g>
<g >
<title>__wake_up_common (53,502,119 samples, 0.09%)</title><rect x="970.7" y="405" width="1.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="973.75" y="415.5" ></text>
</g>
<g >
<title>skb_release_data (156,918,507 samples, 0.26%)</title><rect x="480.3" y="613" width="3.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="483.30" y="623.5" ></text>
</g>
<g >
<title>tun_rs::platform::linux::device::DeviceImpl::send_multiple0 (17,960,184,335 samples, 29.42%)</title><rect x="674.9" y="789" width="347.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="677.90" y="799.5" >tun_rs::platform::linux::device::DeviceImpl::se..</text>
</g>
<g >
<title>__calc_delta.constprop.0 (103,392,113 samples, 0.17%)</title><rect x="660.0" y="485" width="2.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="663.02" y="495.5" ></text>
</g>
<g >
<title>consume_skb (43,691,660 samples, 0.07%)</title><rect x="469.8" y="645" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="472.76" y="655.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (213,962,086 samples, 0.35%)</title><rect x="1143.5" y="757" width="4.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1146.52" y="767.5" ></text>
</g>
<g >
<title>dequeue_entity (647,866,009 samples, 1.06%)</title><rect x="654.9" y="517" width="12.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="657.95" y="527.5" ></text>
</g>
<g >
<title>dequeue_entities (892,114,016 samples, 1.46%)</title><rect x="654.9" y="533" width="17.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="657.95" y="543.5" ></text>
</g>
<g >
<title>__ip_finish_output (1,074,921,392 samples, 1.76%)</title><rect x="906.6" y="309" width="20.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="909.60" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (53,498,052 samples, 0.09%)</title><rect x="852.4" y="453" width="1.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="855.45" y="463.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (55,948,459 samples, 0.09%)</title><rect x="451.1" y="709" width="1.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="454.14" y="719.5" ></text>
</g>
<g >
<title>__free_one_page (53,477,229 samples, 0.09%)</title><rect x="418.4" y="581" width="1.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="421.36" y="591.5" ></text>
</g>
<g >
<title>check_heap_object (77,368,572 samples, 0.13%)</title><rect x="710.3" y="581" width="1.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="713.25" y="591.5" ></text>
</g>
<g >
<title>page_counter_uncharge (142,483,773 samples, 0.23%)</title><rect x="960.5" y="325" width="2.8" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="963.52" y="335.5" ></text>
</g>
<g >
<title>__fsnotify_parent (204,717,410 samples, 0.34%)</title><rect x="463.8" y="661" width="3.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="466.77" y="671.5" ></text>
</g>
<g >
<title>__sk_mem_schedule (213,955,819 samples, 0.35%)</title><rect x="996.8" y="421" width="4.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="999.81" y="431.5" ></text>
</g>
<g >
<title>tcp_urg (53,497,040 samples, 0.09%)</title><rect x="1002.0" y="453" width="1.0" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1004.98" y="463.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node_noprof (101,254,982 samples, 0.17%)</title><rect x="796.0" y="565" width="1.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="798.97" y="575.5" ></text>
</g>
<g >
<title>ip_local_out (1,074,921,392 samples, 1.76%)</title><rect x="906.6" y="357" width="20.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="909.60" y="367.5" ></text>
</g>
<g >
<title>select_task_rq (106,989,285 samples, 0.18%)</title><rect x="920.0" y="101" width="2.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="923.05" y="111.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (29,761,008 samples, 0.05%)</title><rect x="667.5" y="485" width="0.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="670.47" y="495.5" ></text>
</g>
<g >
<title>tcp_send_ack (53,499,464 samples, 0.09%)</title><rect x="1000.9" y="453" width="1.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1003.95" y="463.5" ></text>
</g>
<g >
<title>__memset (53,497,911 samples, 0.09%)</title><rect x="793.9" y="581" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="796.90" y="591.5" ></text>
</g>
<g >
<title>tun_net_xmit (593,423,386 samples, 0.97%)</title><rect x="911.8" y="197" width="11.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="914.77" y="207.5" ></text>
</g>
<g >
<title>tun_sock_write_space (106,982,756 samples, 0.18%)</title><rect x="1007.9" y="533" width="2.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1010.95" y="543.5" ></text>
</g>
<g >
<title>tun_rs::platform::linux::offload::TcpFlowKey::new (793,003,797 samples, 1.30%)</title><rect x="188.4" y="773" width="15.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="191.38" y="783.5" ></text>
</g>
<g >
<title>__GI___pthread_disable_asynccancel (160,489,451 samples, 0.26%)</title><rect x="443.8" y="773" width="3.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="446.78" y="783.5" ></text>
</g>
<g >
<title>tun_rs::platform::linux::offload::handle_gro (60,125,712 samples, 0.10%)</title><rect x="208.9" y="773" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="211.88" y="783.5" ></text>
</g>
<g >
<title>prep_compound_page (267,485,072 samples, 0.44%)</title><rect x="856.6" y="533" width="5.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="859.59" y="543.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core.constprop.0 (148,087,734 samples, 0.24%)</title><rect x="876.6" y="565" width="2.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="879.63" y="575.5" ></text>
</g>
<g >
<title>kmem_cache_free (37,201,562 samples, 0.06%)</title><rect x="896.6" y="405" width="0.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="899.58" y="415.5" ></text>
</g>
<g >
<title>kmem_cache_free (179,280,487 samples, 0.29%)</title><rect x="956.4" y="373" width="3.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="959.35" y="383.5" ></text>
</g>
<g >
<title>&lt;bytes::bytes_mut::BytesMut as tun_rs::platform::linux::offload::ExpandBuffer&gt;::buf_extend_from_slice (320,841,130 samples, 0.53%)</title><rect x="14.1" y="789" width="6.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="17.06" y="799.5" ></text>
</g>
<g >
<title>_copy_from_iter (220,726,826 samples, 0.36%)</title><rect x="711.7" y="613" width="4.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="714.75" y="623.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (588,422,598 samples, 0.96%)</title><rect x="409.0" y="773" width="11.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="412.05" y="783.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (126,222,431 samples, 0.21%)</title><rect x="942.5" y="373" width="2.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="945.54" y="383.5" ></text>
</g>
<g >
<title>clear_page_erms (2,514,144,021 samples, 4.12%)</title><rect x="804.9" y="533" width="48.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="807.88" y="543.5" >clea..</text>
</g>
<g >
<title>refill_stock (178,873,451 samples, 0.29%)</title><rect x="959.8" y="373" width="3.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="962.82" y="383.5" ></text>
</g>
<g >
<title>skb_free_head (179,280,487 samples, 0.29%)</title><rect x="956.4" y="389" width="3.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="959.35" y="399.5" ></text>
</g>
<g >
<title>free_frozen_page_commit (96,240,764 samples, 0.16%)</title><rect x="947.5" y="357" width="1.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="950.52" y="367.5" ></text>
</g>
<g >
<title>__slab_free (154,591,255 samples, 0.25%)</title><rect x="956.8" y="357" width="3.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="959.83" y="367.5" ></text>
</g>
<g >
<title>__alloc_frozen_pages_noprof (3,423,579,252 samples, 5.61%)</title><rect x="800.7" y="565" width="66.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="803.75" y="575.5" >__alloc..</text>
</g>
<g >
<title>neigh_connected_output (914,414,006 samples, 1.50%)</title><rect x="908.7" y="277" width="17.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="911.67" y="287.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (6,229,369,179 samples, 10.20%)</title><rect x="882.6" y="517" width="120.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="885.60" y="527.5" >ip_protocol_del..</text>
</g>
<g >
<title>__dev_queue_xmit (807,413,603 samples, 1.32%)</title><rect x="910.7" y="261" width="15.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="913.74" y="271.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (160,497,056 samples, 0.26%)</title><rect x="1143.5" y="725" width="3.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1146.52" y="735.5" ></text>
</g>
<g >
<title>__virt_addr_valid (106,996,827 samples, 0.18%)</title><rect x="508.8" y="517" width="2.0" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="511.76" y="527.5" ></text>
</g>
<g >
<title>__kfree_skb (1,293,850,645 samples, 2.12%)</title><rect x="934.8" y="421" width="25.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="937.81" y="431.5" >_..</text>
</g>
<g >
<title>ip_queue_xmit (53,498,831 samples, 0.09%)</title><rect x="927.4" y="405" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="930.38" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (55,211,031 samples, 0.09%)</title><rect x="948.3" y="325" width="1.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="951.31" y="335.5" ></text>
</g>
<g >
<title>irq_exit_rcu (588,422,598 samples, 0.96%)</title><rect x="409.0" y="741" width="11.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="412.05" y="751.5" ></text>
</g>
<g >
<title>tun_rs::platform::linux::checksum::pseudo_header_checksum_no_fold (1,154,899,884 samples, 1.89%)</title><rect x="420.4" y="789" width="22.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="423.42" y="799.5" >t..</text>
</g>
<g >
<title>drain_stock (178,873,451 samples, 0.29%)</title><rect x="959.8" y="341" width="3.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="962.82" y="351.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (5,818,837,751 samples, 9.53%)</title><rect x="890.5" y="485" width="112.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="893.53" y="495.5" >tcp_v4_do_rcv</text>
</g>
<g >
<title>cpuacct_charge (60,650,304 samples, 0.10%)</title><rect x="662.0" y="485" width="1.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="665.02" y="495.5" ></text>
</g>
<g >
<title>sched_clock (101,175,941 samples, 0.17%)</title><rect x="652.1" y="533" width="2.0" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="655.14" y="543.5" ></text>
</g>
<g >
<title>__check_object_size (123,292,019 samples, 0.20%)</title><rect x="709.4" y="613" width="2.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="712.36" y="623.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (53,496,386 samples, 0.09%)</title><rect x="994.7" y="405" width="1.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="997.74" y="415.5" ></text>
</g>
<g >
<title>sched_clock (106,999,831 samples, 0.18%)</title><rect x="991.6" y="293" width="2.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="994.64" y="303.5" ></text>
</g>
<g >
<title>bytes::bytes_mut::BytesMut::resize (941,437,562 samples, 1.54%)</title><rect x="123.0" y="757" width="18.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="125.95" y="767.5" ></text>
</g>
<g >
<title>try_to_block_task.constprop.0.isra.0 (892,114,016 samples, 1.46%)</title><rect x="654.9" y="581" width="17.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="657.95" y="591.5" ></text>
</g>
<g >
<title>dl_server_update (36,831,132 samples, 0.06%)</title><rect x="657.4" y="501" width="0.7" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="660.36" y="511.5" ></text>
</g>
<g >
<title>native_write_msr (146,907,850 samples, 0.24%)</title><rect x="639.6" y="501" width="2.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="642.58" y="511.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (146,611,941 samples, 0.24%)</title><rect x="1016.3" y="757" width="2.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1019.30" y="767.5" ></text>
</g>
<g >
<title>validate_xmit_skb (53,498,837 samples, 0.09%)</title><rect x="923.2" y="197" width="1.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="926.25" y="207.5" ></text>
</g>
<g >
<title>free_tail_page_prepare (282,101,454 samples, 0.46%)</title><rect x="949.4" y="357" width="5.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="952.38" y="367.5" ></text>
</g>
<g >
<title>netif_receive_skb (7,369,089,298 samples, 12.07%)</title><rect x="873.9" y="613" width="142.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="876.85" y="623.5" >netif_receive_skb</text>
</g>
<g >
<title>__GI___pthread_enable_asynccancel (53,501,703 samples, 0.09%)</title><rect x="1021.0" y="773" width="1.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1024.04" y="783.5" ></text>
</g>
<g >
<title>ip_local_deliver (6,389,872,115 samples, 10.47%)</title><rect x="879.5" y="549" width="123.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="882.49" y="559.5" >ip_local_deliver</text>
</g>
<g >
<title>_raw_spin_lock (37,602,534 samples, 0.06%)</title><rect x="644.7" y="549" width="0.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="647.74" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (17,303,256,313 samples, 28.35%)</title><rect x="681.8" y="741" width="334.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="684.82" y="751.5" >do_syscall_64</text>
</g>
<g >
<title>page_counter_cancel (98,241,065 samples, 0.16%)</title><rect x="961.4" y="309" width="1.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="964.38" y="319.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (44,077,173 samples, 0.07%)</title><rect x="654.1" y="581" width="0.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="657.10" y="591.5" ></text>
</g>
<g >
<title>tcp_data_ready (1,353,385,852 samples, 2.22%)</title><rect x="969.6" y="437" width="26.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="972.61" y="447.5" >t..</text>
</g>
<g >
<title>ip_local_deliver_finish (6,282,870,808 samples, 10.29%)</title><rect x="881.6" y="533" width="121.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="884.56" y="543.5" >ip_local_delive..</text>
</g>
<g >
<title>skb_copy_datagram_from_iter (3,990,521,476 samples, 6.54%)</title><rect x="708.3" y="629" width="77.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="711.33" y="639.5" >skb_copy..</text>
</g>
<g >
<title>_raw_spin_unlock (53,498,590 samples, 0.09%)</title><rect x="887.8" y="485" width="1.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="890.81" y="495.5" ></text>
</g>
<g >
<title>__get_user_8 (55,948,459 samples, 0.09%)</title><rect x="451.1" y="677" width="1.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="454.14" y="687.5" ></text>
</g>
<g >
<title>default_wake_function (486,440,354 samples, 0.80%)</title><rect x="913.8" y="133" width="9.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="916.84" y="143.5" ></text>
</g>
<g >
<title>_copy_to_iter (53,502,686 samples, 0.09%)</title><rect x="500.8" y="581" width="1.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="503.77" y="591.5" ></text>
</g>
<g >
<title>pollwake (53,501,099 samples, 0.09%)</title><rect x="993.7" y="389" width="1.0" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="996.71" y="399.5" ></text>
</g>
<g >
<title>tun_rs::platform::linux::offload::GROTable::reset (53,496,203 samples, 0.09%)</title><rect x="187.3" y="773" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="190.34" y="783.5" ></text>
</g>
<g >
<title>tun_rs::platform::linux::checksum::pseudo_header_checksum_no_fold (53,499,499 samples, 0.09%)</title><rect x="185.3" y="773" width="1.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="188.27" y="783.5" ></text>
</g>
<g >
<title>perf_event_context_sched_out (71,412,591 samples, 0.12%)</title><rect x="645.5" y="549" width="1.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="648.47" y="559.5" ></text>
</g>
<g >
<title>llist_add_batch (53,498,002 samples, 0.09%)</title><rect x="989.6" y="309" width="1.0" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="992.57" y="319.5" ></text>
</g>
<g >
<title>rb_first (18,894,380 samples, 0.03%)</title><rect x="932.2" y="437" width="0.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="935.19" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (120,713,659 samples, 0.20%)</title><rect x="181.9" y="757" width="2.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="184.91" y="767.5" ></text>
</g>
<g >
<title>tun_rx_batched.isra.0 (7,422,590,181 samples, 12.16%)</title><rect x="872.8" y="629" width="143.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="875.82" y="639.5" >tun_rx_batched.isr..</text>
</g>
<g >
<title>__netif_receive_skb (7,187,818,141 samples, 11.77%)</title><rect x="875.6" y="597" width="138.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="878.60" y="607.5" >__netif_receive_skb</text>
</g>
<g >
<title>core::hash::BuildHasher::hash_one (1,395,900,804 samples, 2.29%)</title><rect x="152.9" y="773" width="27.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="155.91" y="783.5" >c..</text>
</g>
<g >
<title>skb_clone_tx_timestamp (106,983,032 samples, 0.18%)</title><rect x="911.8" y="181" width="2.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="914.77" y="191.5" ></text>
</g>
<g >
<title>_copy_from_iter (3,486,031,268 samples, 5.71%)</title><rect x="718.1" y="597" width="67.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="721.08" y="607.5" >_copy_f..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (45,292,292 samples, 0.07%)</title><rect x="682.5" y="709" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="685.49" y="719.5" ></text>
</g>
<g >
<title>sched_clock_cpu (53,500,322 samples, 0.09%)</title><rect x="922.2" y="85" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="925.21" y="95.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node_noprof (92,414,458 samples, 0.15%)</title><rect x="797.9" y="581" width="1.8" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="800.93" y="591.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (80,232,240 samples, 0.13%)</title><rect x="705.7" y="629" width="1.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="708.72" y="639.5" ></text>
</g>
<g >
<title>irq_exit_rcu (45,292,292 samples, 0.07%)</title><rect x="682.5" y="693" width="0.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="685.49" y="703.5" ></text>
</g>
<g >
<title>__slab_free (103,433,903 samples, 0.17%)</title><rect x="481.3" y="565" width="2.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="484.33" y="575.5" ></text>
</g>
<g >
<title>__alloc_skb (576,407,894 samples, 0.94%)</title><rect x="788.6" y="597" width="11.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="791.57" y="607.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (14,422,675 samples, 0.02%)</title><rect x="673.7" y="757" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="676.74" y="767.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (6,713,719,037 samples, 11.00%)</title><rect x="499.7" y="597" width="129.8" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="502.74" y="607.5" >__skb_datagram_i..</text>
</g>
<g >
<title>sk_filter_trim_cap (87,206,353 samples, 0.14%)</title><rect x="888.8" y="485" width="1.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="891.85" y="495.5" ></text>
</g>
<g >
<title>__rmqueue_pcplist (160,463,665 samples, 0.26%)</title><rect x="863.8" y="517" width="3.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="866.82" y="527.5" ></text>
</g>
<g >
<title>kmalloc_reserve (53,488,946 samples, 0.09%)</title><rect x="902.5" y="389" width="1.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="905.47" y="399.5" ></text>
</g>
<g >
<title>__kfree_skb (61,922,712 samples, 0.10%)</title><rect x="896.1" y="453" width="1.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="899.10" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_disable_asynccancel (98,795,587 samples, 0.16%)</title><rect x="1019.1" y="773" width="1.9" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1022.13" y="783.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core.constprop.0 (53,500,662 samples, 0.09%)</title><rect x="875.6" y="581" width="1.0" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="878.60" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11,603,679,285 samples, 19.01%)</title><rect x="449.4" y="757" width="224.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="452.44" y="767.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>tun-rs-sync-gso (61,043,417,232 samples, 100.00%)</title><rect x="10.0" y="805" width="1180.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="13.00" y="815.5" >tun-rs-sync-gso</text>
</g>
<g >
<title>sched_clock_noinstr (53,501,274 samples, 0.09%)</title><rect x="992.7" y="277" width="1.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="995.67" y="287.5" ></text>
</g>
<g >
<title>kfree_skbmem (112,052,589 samples, 0.18%)</title><rect x="934.8" y="405" width="2.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="937.81" y="415.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (146,907,850 samples, 0.24%)</title><rect x="639.6" y="581" width="2.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="642.58" y="591.5" ></text>
</g>
<g >
<title>__folio_put (714,859,177 samples, 1.17%)</title><rect x="942.5" y="389" width="13.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="945.54" y="399.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (178,873,451 samples, 0.29%)</title><rect x="959.8" y="421" width="3.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="962.82" y="431.5" ></text>
</g>
<g >
<title>sock_def_readable (486,440,354 samples, 0.80%)</title><rect x="913.8" y="181" width="9.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="916.84" y="191.5" ></text>
</g>
<g >
<title>default_wake_function (913,862,798 samples, 1.50%)</title><rect x="976.0" y="357" width="17.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="979.04" y="367.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (45,292,292 samples, 0.07%)</title><rect x="682.5" y="677" width="0.9" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="685.49" y="687.5" ></text>
</g>
<g >
<title>x64_sys_call (11,309,606,512 samples, 18.53%)</title><rect x="455.1" y="725" width="218.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="458.12" y="735.5" >x64_sys_call</text>
</g>
<g >
<title>dev_hard_start_xmit (593,423,386 samples, 0.97%)</title><rect x="911.8" y="213" width="11.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="914.77" y="223.5" ></text>
</g>
<g >
<title>sched_clock (53,500,322 samples, 0.09%)</title><rect x="922.2" y="69" width="1.0" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="925.21" y="79.5" ></text>
</g>
<g >
<title>pick_next_task (73,686,770 samples, 0.12%)</title><rect x="642.4" y="581" width="1.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="645.42" y="591.5" ></text>
</g>
<g >
<title>check_heap_object (357,600,368 samples, 0.59%)</title><rect x="503.9" y="533" width="6.9" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="506.92" y="543.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (53,489,551 samples, 0.09%)</title><rect x="914.9" y="117" width="1.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="917.88" y="127.5" ></text>
</g>
<g >
<title>__x64_sys_read (11,309,606,512 samples, 18.53%)</title><rect x="455.1" y="709" width="218.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="458.12" y="719.5" >__x64_sys_read</text>
</g>
<g >
<title>syscall_exit_to_user_mode (53,498,449 samples, 0.09%)</title><rect x="683.4" y="725" width="1.0" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="686.37" y="735.5" ></text>
</g>
<g >
<title>post_alloc_hook (106,999,364 samples, 0.18%)</title><rect x="854.5" y="533" width="2.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="857.52" y="543.5" ></text>
</g>
<g >
<title>net_rx_action (588,422,598 samples, 0.96%)</title><rect x="409.0" y="693" width="11.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="412.05" y="703.5" ></text>
</g>
<g >
<title>cond_accept_memory (53,498,345 samples, 0.09%)</title><rect x="853.5" y="533" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="856.48" y="543.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (1,181,920,534 samples, 1.94%)</title><rect x="904.5" y="373" width="22.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="907.53" y="383.5" >_..</text>
</g>
<g >
<title>__check_heap_object (45,923,447 samples, 0.08%)</title><rect x="709.4" y="581" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="712.36" y="591.5" ></text>
</g>
<g >
<title>handle_softirqs (160,497,056 samples, 0.26%)</title><rect x="1143.5" y="709" width="3.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1146.52" y="719.5" ></text>
</g>
<g >
<title>tun_rs::platform::linux::offload::tcp_gro (374,458,496 samples, 0.61%)</title><rect x="213.1" y="773" width="7.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="216.14" y="783.5" ></text>
</g>
<g >
<title>free_tail_page_prepare (78,557,255 samples, 0.13%)</title><rect x="954.8" y="373" width="1.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="957.84" y="383.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1,235,421,737 samples, 2.02%)</title><rect x="903.5" y="389" width="23.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="906.50" y="399.5" >i..</text>
</g>
<g >
<title>_raw_spin_trylock (53,499,225 samples, 0.09%)</title><rect x="1144.6" y="629" width="1.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1147.56" y="639.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (53,497,760 samples, 0.09%)</title><rect x="1145.6" y="597" width="1.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1148.59" y="607.5" ></text>
</g>
<g >
<title>switch_hrtimer_base (45,116,691 samples, 0.07%)</title><rect x="670.4" y="469" width="0.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="673.42" y="479.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (43,682,912 samples, 0.07%)</title><rect x="492.5" y="613" width="0.8" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="495.51" y="623.5" ></text>
</g>
<g >
<title>__schedule (1,853,762,430 samples, 3.04%)</title><rect x="636.4" y="597" width="35.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="639.36" y="607.5" >__s..</text>
</g>
<g >
<title>__free_one_page (53,497,760 samples, 0.09%)</title><rect x="1145.6" y="581" width="1.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1148.59" y="591.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk (53,500,637 samples, 0.09%)</title><rect x="410.1" y="645" width="1.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="413.08" y="655.5" ></text>
</g>
<g >
<title>tcp_rcv_established (5,691,411,274 samples, 9.32%)</title><rect x="893.0" y="469" width="110.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="896.00" y="479.5" >tcp_rcv_estab..</text>
</g>
<g >
<title>slab_update_freelist.isra.0 (56,802,276 samples, 0.09%)</title><rect x="482.2" y="549" width="1.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="485.23" y="559.5" ></text>
</g>
<g >
<title>tun_chr_write_iter (16,340,631,268 samples, 26.77%)</title><rect x="700.4" y="661" width="315.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="703.43" y="671.5" >tun_chr_write_iter</text>
</g>
<g >
<title>__smp_call_single_queue (107,001,865 samples, 0.18%)</title><rect x="987.5" y="309" width="2.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="990.50" y="319.5" ></text>
</g>
<g >
<title>ip_skb_dst_mtu (53,501,968 samples, 0.09%)</title><rect x="926.3" y="293" width="1.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="929.35" y="303.5" ></text>
</g>
<g >
<title>skb_free_head (37,201,562 samples, 0.06%)</title><rect x="896.6" y="421" width="0.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="899.58" y="431.5" ></text>
</g>
<g >
<title>put_prev_entity (26,113,750 samples, 0.04%)</title><rect x="643.3" y="549" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="646.34" y="559.5" ></text>
</g>
<g >
<title>tcp_try_rmem_schedule (213,955,819 samples, 0.35%)</title><rect x="996.8" y="437" width="4.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="999.81" y="447.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (32,800,687 samples, 0.05%)</title><rect x="453.8" y="709" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="456.79" y="719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (200,673,270 samples, 0.33%)</title><rect x="677.9" y="757" width="3.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="680.94" y="767.5" ></text>
</g>
<g >
<title>tun_rs::platform::linux::offload::packet_is_gro_candidate (106,984,670 samples, 0.18%)</title><rect x="1151.8" y="789" width="2.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1154.80" y="799.5" ></text>
</g>
<g >
<title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5,265,123,497 samples, 8.63%)</title><rect x="20.3" y="773" width="101.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="23.26" y="783.5" >&lt;std::hash::..</text>
</g>
<g >
<title>psi_group_change (375,053,559 samples, 0.61%)</title><rect x="646.8" y="565" width="7.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="649.85" y="575.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (47,417,857 samples, 0.08%)</title><rect x="122.0" y="757" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="125.04" y="767.5" ></text>
</g>
<g >
<title>tun_rs::platform::linux::checksum::checksum (53,501,257 samples, 0.09%)</title><rect x="184.2" y="773" width="1.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="187.24" y="783.5" ></text>
</g>
<g >
<title>__check_heap_object (47,196,601 samples, 0.08%)</title><rect x="507.9" y="517" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="510.85" y="527.5" ></text>
</g>
<g >
<title>__sk_mem_raise_allocated (213,955,819 samples, 0.35%)</title><rect x="996.8" y="405" width="4.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="999.81" y="415.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (53,498,052 samples, 0.09%)</title><rect x="852.4" y="485" width="1.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="855.45" y="495.5" ></text>
</g>
<g >
<title>update_curr (353,211,470 samples, 0.58%)</title><rect x="658.1" y="501" width="6.8" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="661.07" y="511.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (55,948,459 samples, 0.09%)</title><rect x="451.1" y="693" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="454.14" y="703.5" ></text>
</g>
<g >
<title>__memset (53,499,723 samples, 0.09%)</title><rect x="794.9" y="565" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="797.93" y="575.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (53,498,837 samples, 0.09%)</title><rect x="923.2" y="213" width="1.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="926.25" y="223.5" ></text>
</g>
<g >
<title>__check_heap_object (55,705,795 samples, 0.09%)</title><rect x="502.8" y="533" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="505.84" y="543.5" ></text>
</g>
<g >
<title>cpus_share_cache (111,402,723 samples, 0.18%)</title><rect x="983.3" y="277" width="2.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="986.28" y="287.5" ></text>
</g>
<g >
<title>napi_skb_cache_put (53,500,637 samples, 0.09%)</title><rect x="410.1" y="661" width="1.0" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="413.08" y="671.5" ></text>
</g>
<g >
<title>tun_get_user (16,233,674,978 samples, 26.59%)</title><rect x="702.5" y="645" width="313.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="705.49" y="655.5" >tun_get_user</text>
</g>
<g >
<title>__update_load_avg_se (50,086,928 samples, 0.08%)</title><rect x="666.5" y="485" width="1.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="669.50" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (11,603,679,285 samples, 19.01%)</title><rect x="449.4" y="741" width="224.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="452.44" y="751.5" >do_syscall_64</text>
</g>
<g >
<title>__inet_lookup_established (127,056,294 samples, 0.21%)</title><rect x="1010.0" y="517" width="2.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1013.02" y="527.5" ></text>
</g>
<g >
<title>iov_iter_advance (73,536,155 samples, 0.12%)</title><rect x="497.3" y="613" width="1.4" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="500.28" y="623.5" ></text>
</g>
<g >
<title>tun_rs_sync_gso::copy (380,757,814 samples, 0.62%)</title><rect x="220.4" y="773" width="7.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="223.38" y="783.5" ></text>
</g>
<g >
<title>free_frozen_pages (53,497,760 samples, 0.09%)</title><rect x="1145.6" y="629" width="1.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1148.59" y="639.5" ></text>
</g>
<g >
<title>_copy_to_iter (6,139,926,271 samples, 10.06%)</title><rect x="510.8" y="565" width="118.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="513.83" y="575.5" >_copy_to_iter</text>
</g>
<g >
<title>__raw_spin_lock_irqsave (106,998,233 samples, 0.18%)</title><rect x="979.1" y="309" width="2.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="982.14" y="319.5" ></text>
</g>
<g >
<title>slab_update_freelist.isra.0 (66,899,548 samples, 0.11%)</title><rect x="958.5" y="341" width="1.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="961.53" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (53,498,052 samples, 0.09%)</title><rect x="852.4" y="517" width="1.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="855.45" y="527.5" ></text>
</g>
<g >
<title>mod_memcg_state (160,475,928 samples, 0.26%)</title><rect x="996.8" y="373" width="3.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="999.81" y="383.5" ></text>
</g>
<g >
<title>select_task_rq (218,399,123 samples, 0.36%)</title><rect x="981.2" y="325" width="4.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="984.21" y="335.5" ></text>
</g>
<g >
<title>update_entity_lag (36,398,828 samples, 0.06%)</title><rect x="671.3" y="517" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="674.29" y="527.5" ></text>
</g>
<g >
<title>kfree_skbmem (272,630,828 samples, 0.45%)</title><rect x="475.0" y="613" width="5.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="478.03" y="623.5" ></text>
</g>
<g >
<title>read_tsc (90,909,678 samples, 0.15%)</title><rect x="1014.5" y="597" width="1.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1017.54" y="607.5" ></text>
</g>
<g >
<title>ip_rcv_core (362,301,657 samples, 0.59%)</title><rect x="1003.0" y="549" width="7.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1006.01" y="559.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_skmem (178,873,451 samples, 0.29%)</title><rect x="959.8" y="389" width="3.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="962.82" y="399.5" ></text>
</g>
<g >
<title>tun_rs::platform::linux::offload::TcpGROTable::lookup_or_insert (267,472,194 samples, 0.44%)</title><rect x="1026.2" y="789" width="5.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1029.21" y="799.5" ></text>
</g>
<g >
<title>native_sched_clock (53,498,557 samples, 0.09%)</title><rect x="991.6" y="277" width="1.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="994.64" y="287.5" ></text>
</g>
<g >
<title>fdget_pos (409,231,672 samples, 0.67%)</title><rect x="686.2" y="677" width="7.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="689.20" y="687.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (428,211,663 samples, 0.70%)</title><rect x="143.6" y="773" width="8.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="146.60" y="783.5" ></text>
</g>
<g >
<title>sched_tick (53,498,052 samples, 0.09%)</title><rect x="852.4" y="405" width="1.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="855.45" y="415.5" ></text>
</g>
<g >
<title>kmem_cache_free_bulk.part.0 (53,500,637 samples, 0.09%)</title><rect x="410.1" y="629" width="1.0" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="413.08" y="639.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (35,919,471 samples, 0.06%)</title><rect x="454.4" y="709" width="0.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="457.43" y="719.5" ></text>
</g>
<g >
<title>tun_rs::platform::linux::offload::tcp_gro (1,869,290,122 samples, 3.06%)</title><rect x="1153.9" y="789" width="36.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1156.87" y="799.5" >tun..</text>
</g>
<g >
<title>_raw_spin_lock (86,073,298 samples, 0.14%)</title><rect x="637.9" y="581" width="1.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="640.92" y="591.5" ></text>
</g>
<g >
<title>vfs_read (10,999,526,977 samples, 18.02%)</title><rect x="461.1" y="677" width="212.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="464.12" y="687.5" >vfs_read</text>
</g>
<g >
<title>x86_pmu_enable (146,907,850 samples, 0.24%)</title><rect x="639.6" y="533" width="2.8" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="642.58" y="543.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (213,962,086 samples, 0.35%)</title><rect x="1143.5" y="773" width="4.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1146.52" y="783.5" ></text>
</g>
<g >
<title>ksys_write (17,129,924,444 samples, 28.06%)</title><rect x="685.2" y="693" width="331.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="688.17" y="703.5" >ksys_write</text>
</g>
<g >
<title>kmem_cache_free (103,433,903 samples, 0.17%)</title><rect x="481.3" y="581" width="2.0" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="484.33" y="591.5" ></text>
</g>
<g >
<title>fdget_pos (310,079,535 samples, 0.51%)</title><rect x="455.1" y="677" width="6.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="458.12" y="687.5" ></text>
</g>
<g >
<title>irq_exit_rcu (160,497,056 samples, 0.26%)</title><rect x="1143.5" y="741" width="3.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1146.52" y="751.5" ></text>
</g>
<g >
<title>slab_update_freelist.isra.0 (36,768,310 samples, 0.06%)</title><rect x="479.6" y="565" width="0.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="482.59" y="575.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (123,292,019 samples, 0.20%)</title><rect x="709.4" y="597" width="2.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="712.36" y="607.5" ></text>
</g>
<g >
<title>tun_sock_write_space (29,280,522 samples, 0.05%)</title><rect x="1007.4" y="517" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1010.38" y="527.5" ></text>
</g>
<g >
<title>sock_def_readable (1,353,385,852 samples, 2.22%)</title><rect x="969.6" y="421" width="26.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="972.61" y="431.5" >s..</text>
</g>
</g>
</svg>
